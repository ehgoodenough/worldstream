package edu.utc.bkf926.WorldStream;

import java.util.Arrays;

import org.bukkit.Bukkit;
import org.bukkit.block.Block;

public class WSMetadata {
	
	/**
	 * Contains blocks that are not supported by WorldStream's current version.
	 * @data Method returns null. 
	 */
	public static final String[] NOT_SUPPORTED = {
			"AIR", "NETHER_PORTAL", "END_PORTAL", "COMMAND_BLOCK",
			"REPEATING_COMMAND_BLOCK", "CHAIN_COMMAND_BLOCK", "STANDING_BANNER",
			"WALL_BANNER", "END_GATEWAY"
	};
	
	/**
	 * Blocks with no metadata.
	 * @data Nothing. Method returns an empty string.
	 */
	public static final String[] NO_METADATA = {
			"COBBLESTONE", "BEDROCK", "WATER", "LAVA", "GRAVEL", "GOLD_ORE",
			"IRON_ORE", "COAL_ORE", "SPONGE", "GLASS", "LAPIS_ORE", "LAPIS_BLOCK",
			"NOTEBLOCK", "WEB", "DEADBUSH", "YELLOW_FLOWER", "GOLD_BLOCK", "IRON_BLOCK",
			"BRICK_BLOCK", "TNT", "BOOKSHELF", "MOSSY_COBBLESTONE", "OBSIDIAN", "MOB_SPAWNER",
			"DIAMOND_ORE", "DIAMOND_BLOCK", "CRAFTING_TABLE", "STONE_PRESSURE_PLATE",
			"WOODEN_PRESSURE_PLATE", "REDSTONE_ORE", "ICE", "SNOW", "CACTUS", "CLAY", "REEDS",
			"NETHERRACK", "SOUL_SAND", "CAKE_BLOCK", "MELON_BLOCK", "MYCELIUM", "NETHER_BRICK",
			"ENCHANTING_TABLE", "BREWING_STAND", "END_STONE", "DRAGON_EGG", "REDSTONE_LAMP",
			"EMERALD_ORE", "EMERALD_BLOCK", "LIGHT_WEIGHTED_PRESSURE_PLATE",
			"HEAVY_WEIGHTED_PRESSURE_PLATE", "REDSTONE_BLOCK", "QUARTZ_ORE", "DAYLIGHT_DETECTOR",
			"SLIME", "BARRIER", "HARDENED_CLAY", "COAL_BLOCK", "PACKED_ICE", "DAYLIGHT_DETECTOR_INVERTED",
			"DOUBLE_STONE_SLAB2", "PURPUR_BLOCK", "PURPUR_PILLAR", "END_BRICKS", "GRASS_PATH", "FROSTED_ICE"
	};
	
	/**
	 * Texture or material variants, used when the same ID number/string is used for multiple types of a block.
	 * @data String from the Minecraft API for the block variant.
	 */
	public static final String[] VARIANT = {
			"STONE", "DIRT", "PLANKS", "SAPLING", "SAND", "LOG", "LEAVES", "SANDSTONE", "TALLGRASS",
			"WOOL", "RED_FLOWER", "DOUBLE_STONE_SLAB", "STAINED_GLASS", "MONSTER_EGG", "STONEBRICK",
			"BROWN_MUSHROOM_BLOCK", "RED_MUSHROOM_BLOCK", "DOUBLE_WOODEN_SLAB", "WOODEN_SLAB",
			"COBBLESTONE_WALL", "QUARTZ_BLOCK", "STAINED_HARDENED_CLAY", "STAINED_GLASS_PANE",
			"LEAVES2", "LOG2", "PRISMARINE", "CARPET", "DOUBLE_PLANT", "RED_SANDSTONE"
	};
	
	/**
	 * Blocks that can be rotated on the horizontal (xz) plane, but not vertically.
	 * @data Range 0 to 270.
	 */
	public static final String[] XZ_ROTATION = {
			"DISPENSER", "BED", "GOLDEN_RAIL", "DETECTOR_RAIL", "CHEST", "REDSTONE_WIRE", "FURNACE",
			"LIT_FURNACE", "STANDING_SIGN", "WOODEN_DOOR", "LADDER", "RAIL", "WALL_SIGN", "IRON_DOOR",
			"TORCH", "STONE_BUTTON", "PUMPKIN", "LIT_PUMPKIN", "UNPOWERED_REPEATER", "POWERED_REPEATER",
			"PUMPKIN_STEM", "MELON_STEM", "VINES", "FENCE_GATE", "WATERLILY", "END_PORTAL_FRAME", "COCOA",
			"ENDER_CHEST", "TRIPWIRE_HOOK", "TRIPWIRE", "WOODEN_BUTTON", "UNPOWERED_COMPARATOR",
			"POWERED_COMPARATOR", "ACTIVATOR_RAIL", "DROPPER", "TRAPPED_CHEST", "ANVIL", "SPRUCE_FENCE_GATE",
			"BIRCH_FENCE_GATE", "JUNGLE_FENCE_GATE", "DARK_OAK_FENCE_GATE", "ACACIA_FENCE_GATE", "SPRUCE_DOOR",
			"BIRCH_DOOR", "JUNGLE_DOOR", "ACACIA_DOOR", "DARK_OAK_DOOR"
	};
	
	/**
	 * Blocks that can be flipped on the y-axis, but not rotated.
	 * @data Range 0 to 180.
	 */
	public static final String[] Y_ROTATION = {
			"STONE_SLAB", "WOODEN_SLAB", "STONE_SLAB2"
	};
	
	/**
	 * Blocks that can be rotated and oriented horizontally or vertically.
	 * @data Two integer values, one for horizontal and one for vertical rotation, both between 0 and 270.
	 */
	public static final String[] XYZ_ROTATION = {};
	
	/**
	 * Stairs. More specifically, this is used for the shape of the stairs.
	 * @data Straight, inner corner, or outer corner.
	 */
	public static final String[] STAIRS_SHAPE = {};
	
	/**
	 * Objects composed of two adjoining blocks.
	 * @data Top or bottom half.
	 */
	public static final String[] HALF = {};
	
	/**
	 * Chests. This deals with single vs. double chests.
	 * @data Left half, right half, or single.
	 */
	public static final String[] CHEST_SECTION = {};
	
	/**
	 * Blocks that have stages of growth (crops).
	 * @data Range 0 to 7. Some crops have fewer stages than others.
	 */
	public static final String[] GROWTH = {};
	
	/**
	 * Blocks that give off light.
	 * @data Range 1 to 15 for the light intensity.
	 */
	public static final String[] LUMINANCE = {};
	
	/**
	 * Fences and connecting wires.
	 * @data A set containing up to 4 indicators for the directions that have adjacent blocks.
	 */
	public static final String[] CONNECTORS = {};
	
	/**
	 * Things that open and close.
	 * @data Boolean for if the door/gate is open.
	 */
	public static final String[] OPEN = {};
	
	/**
	 * Flowing liquid blocks.
	 * @data Range 1 to 7, the distance from the source block to this point.
	 * TODO We may end up not supporting flowing water - we can either cull it out, or replace it with static water.
	 */
	public static final String[] FLOW_DISTANCE = {};
	
	/**
	 * Pistons.
	 * @data Boolean for whether or not the piston's arm is extended.
	 */
	public static final String[] EXTENDED = {};
	
	/**
	 * Grassy terrains.
	 * @data Boolean for whether or not the terrain has snow on top.
	 */
	public static final String[] SNOW_COVERED = {};
	
	/**
	 * Crop stems that "grow" fruit.
	 * @data Boolean for whether or not the crop stem has a fruit block attached to its side.
	 */
	public static final String[] STEM_ATTACHED = {};
	
	/**
	 * Torches.
	 * @data Boolean, true if the torch is wall mounted, false if it is floor mounted. Standing torches will still have rotation, though it is irrelevant.
	 */
	public static final String[] WALL_MOUNT = {};
	
	/**
	 * Farmland.
	 * @data Boolean for whether or not the land is irrigated.
	 */
	public static final String[] IRRIGATED = {};
	
	/**
	 * Doors.
	 * @data Left or Right, for which side the hinge is on.
	 */
	public static final String[] DOOR_HINGE = {};
	
	/**
	 * Signs.
	 * @data A String representing the text contents of the sign.
	 */
	public static final String[] TEXT = {};
	
	/**
	 * Various switches.
	 * @data Boolean for whether or not the switch is activated.
	 */
	public static final String[] ACTIVATED = {};
	
	/**
	 * Snow layers.
	 * @data Range 0 to 7 for the thickness of snow. A thickness of 8 equals another whole snow block.
	 */
	public static final String[] SNOW_THICKNESS = {};
	
	/**
	 * Cauldrons.
	 * @data Range 0 to 3 for the amount of water in the cauldron.
	 */
	public static final String[] FILL_LEVEL = {};
	
	/**
	 * Anvils.
	 * @data Range 0 to 2 for the amount of damage to the anvil.
	 */
	public static final String[] DAMAGE_LEVEL = {};
	
	/**
	 * Returns the metadata portion of a block's JSON code.
	 * @param block
	 * @return A string (with newlines) containing all metadata, or an empty string, or null if the block is unsupported.
	 */
	public static String writeBlockMetadata(Block block){
		String type = block.getType().toString();
		StringBuilder data = new StringBuilder();
		
		if (Arrays.asList(NOT_SUPPORTED).contains(type)) return null;
		if (Arrays.asList(NO_METADATA).contains(type)) return data.toString(); //Return the empty string if there is no metadata.
		
		if (Arrays.asList(VARIANT).contains(type)){
			
		}
		
		return data.toString();
	}
}
