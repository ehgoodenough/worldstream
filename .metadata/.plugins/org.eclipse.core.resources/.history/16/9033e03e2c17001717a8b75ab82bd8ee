package edu.utc.bkf926.WorldStream;

import java.util.ArrayList;

import javax.websocket.EncodeException;
import javax.websocket.Encoder;
import javax.websocket.EndpointConfig;
import javax.websocket.OnMessage;
import javax.websocket.OnOpen;
import javax.websocket.Session;
import javax.websocket.server.PathParam;
import javax.websocket.server.ServerEndpoint;

import org.bukkit.block.Block;

@ServerEndpoint(value="/api/v1/ws/{world}")
public class WSWebSocketEndpoint{
	
	private ArrayList<WSSession> sessions;
	
	static class WSSession {
		Session session;
		String world;
		public WSSession(Session s, String w){
			session=s;
			world=w;
		}
		public void setWorld(String w){
			world=w;
		}
		public String getWorld(){
			return world;
		}
		public Session getSession(){
			return session;
		}
	}
	
	public void startServer(){
		sessions = new ArrayList<WSSession>();
	}
	
	@OnOpen
	public void openConnection(Session s, @PathParam("world") String world){
		sessions.add(new WSSession(s, world));
	}
	
	static class BlockUpdateDecoder implements Encoder.Text<Block>{

		@Override
		public void destroy() {
			// Do nothing
		}

		@Override
		public void init(EndpointConfig arg0) {
			// Do nothing
		}

		@Override
		public String encode(Block arg0) throws EncodeException {
			// TODO This should be where the block JSON is written.
			return null;
		}
		
	}
	
}
